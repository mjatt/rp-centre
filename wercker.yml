box: node

lint:
  steps:
    - npm-install

    - script:
        name: lint
        code: npm run lint
  after-steps:
    - slack-notifier:
        url: $DISCORD_URL
        username: Lint Bot
build:
  steps:
    - npm-install

    - mitelone/webpack:
        config-file: webpack.prod.js
  after-steps:
    - slack-notifier:
        url: $DISCORD_URL
        username: Build Bot
package:
  steps:
    - script:
        name: cleanup
        code: |
              ls -la
              rm -r node_modules/
              rm -r .git/
              ls -la
    - npm-install
    - script:
        name: copy output
        code: |
          cd ..
          mv source rp-centre
          tar -zcvf rp-centre.tar.gz rp-centre
          cp rp-centre.tar.gz "$WERCKER_OUTPUT_DIR"
deploy-dev:
  steps:
    - add-to-known_hosts:
        hostname: rpcentre-indev.bancey.xyz
    - mktemp:
      envvar: PRIVATEKEY_PATH
    - create-file:
      name: write key
      filename: $PRIVATEKEY_PATH
      content: $SSH_KEY
      overwrite: true
      hide-from-log: true
    - script:
        name: stop server
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz sudo /home/bancey/scripts/stopServer.sh
    - script:
        name: transfer files
        code: |
              ls -la
              scp -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no rp-centre.tar.gz bancey@rpcentre-indev.bancey.xyz:/home/bancey
    - script:
        name: remove previous files
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz rm -r /home/bancey/rp-centre
    - script:
        name: unpack files
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz tar -zxvf rp-centre.tar.gz
    - script:
        name: clean up
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz rm /home/bancey/rp-centre.tar.gz
    - script:
        name: build webpack
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz cd /home/bancey/rp-centre && npm run preprod-build
    - script:		
        name: start server		
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre-indev.bancey.xyz sudo /home/bancey/scripts/startServer.sh
  after-steps:
    - slack-notifier:
        url: $DISCORD_URL
        username: Dev Deploy Bot
deploy:
  steps:
    - add-to-known_hosts:
        hostname: rpcentre.bancey.xyz
    - mktemp:
      envvar: PRIVATEKEY_PATH
    - create-file:
      name: write key
      filename: $PRIVATEKEY_PATH
      content: $SSH_KEY
      overwrite: true
      hide-from-log: true
    - script:
        name: stop server
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre.bancey.xyz sudo /home/bancey/scripts/stopServer.sh
    - script:
        name: transfer files
        code: |
              ls -la
              scp -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no rp-centre.tar.gz bancey@rpcentre.bancey.xyz:/home/bancey
    - script:
        name: remove previous files
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre.bancey.xyz rm -r /home/bancey/rp-centre
    - script:
        name: unpack files
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre.bancey.xyz tar -zxvf rp-centre.tar.gz
    - script:
        name: clean up
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre.bancey.xyz rm /home/bancey/rp-centre.tar.gz
    - script:		
        name: start server		
        code: ssh -i $PRIVATEKEY_PATH -o StrictHostKeyChecking=no -o UserKnownHostsFile=no -l bancey rpcentre.bancey.xyz sudo /home/bancey/scripts/startServer.sh
  after-steps:
    - slack-notifier:
        url: $DISCORD_URL
        username: Live Deploy Bot
